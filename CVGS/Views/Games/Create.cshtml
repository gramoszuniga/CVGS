@model CVGS.ViewModels.GameAndGameDetails

@{
    ViewBag.Title = "Add New Game";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.platformCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("platformCode", (SelectList)ViewBag.platforms, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.platformCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.genreCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("genreCode", (SelectList)ViewBag.genres, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.genreCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control", type = "number", min = 0.00, max = 999.99, step = 0.01 } })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.relDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.relDate, new { htmlAttributes = new { @class = "form-control date" } })
                @Html.ValidationMessageFor(model => model.relDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.publisher, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("publisher", (SelectList)ViewBag.publishers, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.publisher, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.desc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.desc, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.desc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.phyCopy, "Physical Copy", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.phyCopy)
                    @Html.ValidationMessageFor(model => model.phyCopy, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div id="divQoh">
            <div class="form-group">
                @Html.LabelFor(model => model.qoh, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.qoh, new { htmlAttributes = new { @class = "form-control", type = "number", min = 0, max = 999 } })
                    @Html.ValidationMessageFor(model => model.qoh, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" /><span class="text-danger">@TempData["errMsg"]</span>
                @Html.ActionLink("Back to Games", "Index")
            </div>
        </div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}